{"ast":null,"code":"var _jsxFileName = \"/Users/taketaharashunsuke/upload/src/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const handleFileChange = event => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setSelectedFile(files[0]);\n    }\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n      try {\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const processedImageData = await response.blob();\n          const processedImageUrl = URL.createObjectURL(processedImageData);\n          setProcessedImage(processedImageUrl);\n        } else {\n          console.error('Error uploading image');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File: \", selectedFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), processedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: processedImage,\n      alt: \"Processed Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"9Sd5Le9GPt6Qp/WllEIABOn0D38=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","processedImage","setProcessedImage","handleFileChange","event","files","target","length","handleUpload","formData","FormData","append","response","fetch","method","body","ok","processedImageData","blob","processedImageUrl","URL","createObjectURL","console","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/taketaharashunsuke/upload/src/FileUpload.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileUpload: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [processedImage, setProcessedImage] = useState<string | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setSelectedFile(files[0]);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n\n      try {\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        });\n\n        if (response.ok) {\n          const processedImageData = await response.blob();\n          const processedImageUrl = URL.createObjectURL(processedImageData);\n          setProcessedImage(processedImageUrl);\n        } else {\n          console.error('Error uploading image');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      {selectedFile && <p>Selected File: {selectedFile.name}</p>}\n      <button onClick={handleUpload}>Upload</button>\n      {processedImage && <img src={processedImage} alt=\"Processed Image\" />}\n    </div>\n  );\n};\n\nexport default FileUpload;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMS,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BP,eAAe,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIT,YAAY,EAAE;MAChB,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,YAAY,CAAC;MAEtC,IAAI;QACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,kBAAkB,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAChD,MAAMC,iBAAiB,GAAGC,GAAG,CAACC,eAAe,CAACJ,kBAAkB,CAAC;UACjEf,iBAAiB,CAACiB,iBAAiB,CAAC;QACtC,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEvB;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChD/B,YAAY,iBAAIH,OAAA;MAAA4B,QAAA,GAAG,iBAAe,EAACzB,YAAY,CAACgC,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DlC,OAAA;MAAQoC,OAAO,EAAExB,YAAa;MAAAgB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C7B,cAAc,iBAAIL,OAAA;MAAKqC,GAAG,EAAEhC,cAAe;MAACiC,GAAG,EAAC;IAAiB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAAChC,EAAA,CA3CID,UAAoB;AAAAsC,EAAA,GAApBtC,UAAoB;AA6C1B,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}