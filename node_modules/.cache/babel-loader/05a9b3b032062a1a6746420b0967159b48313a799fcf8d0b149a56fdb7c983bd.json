{"ast":null,"code":"var _jsxFileName = \"/Users/taketaharashunsuke/upload/src/FileUpload.tsx\",\n  _s = $RefreshSig$();\n// FileUpload.tsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setSelectedFile(files[0]);\n    }\n  };\n  const handleUpload = () => {\n    // アップロード処理をここに実装\n    if (selectedFile) {\n      console.log('Selected File:', selectedFile);\n      // ここで選択したファイルをサーバーにアップロードするための処理を実装\n    } else {\n      console.log('No file selected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File: \", selectedFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","handleFileChange","event","files","target","length","handleUpload","console","log","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["/Users/taketaharashunsuke/upload/src/FileUpload.tsx"],"sourcesContent":["// FileUpload.tsx\n\nimport React, { useState } from 'react';\n\nconst FileUpload: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setSelectedFile(files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    // アップロード処理をここに実装\n    if (selectedFile) {\n      console.log('Selected File:', selectedFile);\n      // ここで選択したファイルをサーバーにアップロードするための処理を実装\n    } else {\n      console.log('No file selected');\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      {selectedFile && <p>Selected File: {selectedFile.name}</p>}\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC;EAEnE,MAAMO,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BL,eAAe,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIP,YAAY,EAAE;MAChBQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,YAAY,CAAC;MAC3C;IACF,CAAC,MAAM;MACLQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEV;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDhB,YAAY,iBAAIH,OAAA;MAAAa,QAAA,GAAG,iBAAe,EAACV,YAAY,CAACiB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DnB,OAAA;MAAQqB,OAAO,EAAEX,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3BID,UAAoB;AAAAqB,EAAA,GAApBrB,UAAoB;AA6B1B,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}